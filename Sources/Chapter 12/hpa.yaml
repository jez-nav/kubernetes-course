apiVersion: autoscaling/v2 # Use v2 for more features like memory/custom metrics
kind: HorizontalPodAutoscaler
metadata:
  name: my-web-app-hpa
spec:
  scaleTargetRef: # Points to the controller to scale
    apiVersion: apps/v1
    kind: Deployment
    name: my-web-app # Name of the Deployment
  minReplicas: 2   # Minimum number of replicas
  maxReplicas: 10  # Maximum number of replicas
  metrics:
  - type: Resource # Scale based on CPU or Memory
    resource:
      name: cpu
      target:
        type: Utilization # Target average utilization across all pods
        averageUtilization: 50 # Target 50% of requested CPU
  # Example for Memory (target average value, not percentage)
  # - type: Resource
  #   resource:
  #     name: memory
  #     target:
  #       type: AverageValue
  #       averageValue: 256Mi # Target 256 Mebibytes average per pod
  # behavior: # Optional: Control scale up/down speed and stabilization
  #   scaleDown:
  #     stabilizationWindowSeconds: 300 # Wait 5 mins before scaling down
  #     policies:
  #     - type: Percent
  #       value: 100 # Allow scaling down all necessary pods at once
  #       periodSeconds: 15
  #   scaleUp:
  #     stabilizationWindowSeconds: 0 # Scale up immediately
  #     policies:
  #     - type: Percent
  #       value: 100
  #       periodSeconds: 15
  #     - type: Pods
  #       value: 4 # Allow adding max 4 pods at once
  #       periodSeconds: 15
  #     selectPolicy: Max # Choose the policy that allows the biggest scale-up
