name: Kubernetes CI/CD Demo

on:
  push:
    branches: [ main ] # Trigger on push to main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # Use a Linux runner

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      id: docker_build
      uses: docker/build-push-action@v4
      with:
        context: . # Build context is the repo root
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/cicd-demo:${{ github.sha }} # Tag with Git SHA
        # Also tag as latest for simplicity in deployment manifest initially
        # In real scenarios, you'd update the deployment manifest tag
        # tags: |
        #   ${{ secrets.DOCKERHUB_USERNAME }}/cicd-demo:${{ github.sha }}
        #   ${{ secrets.DOCKERHUB_USERNAME }}/cicd-demo:latest

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      # uses: azure/k8s-actions@v1 # Alternative action

    - name: Configure kubectl
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 -d > ~/.kube/config
        chmod 600 ~/.kube/config

    # --- Deployment Strategy 1: Update manifest and apply ---
    - name: Update deployment image tag
      run: |
        IMAGE_TAG=${{ github.sha }}
        echo "Using image tag: $IMAGE_TAG"
        # Use sed to replace the image tag (adjust path if needed)
        sed -i "s|image: .*|image: ${{ secrets.DOCKERHUB_USERNAME }}/cicd-demo:$IMAGE_TAG|g" k8s/deployment.yaml
        echo "Updated deployment manifest:"
        cat k8s/deployment.yaml

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s/ -n ${{ secrets.KUBE_NAMESPACE }}
        kubectl rollout status deployment/cicd-demo-app -n ${{ secrets.KUBE_NAMESPACE }} --timeout=60s

    # --- Deployment Strategy 2: Using Helm (Alternative - requires Helm chart) ---
    # - name: Install Helm
    #   uses: azure/setup-helm@v3
    #
    # - name: Deploy with Helm
    #   run: |
    #     helm upgrade cicd-demo ./helm-chart/ \ # Assuming chart is in ./helm-chart
    #       --install \
    #       --namespace ${{ secrets.KUBE_NAMESPACE }} \
    #       --create-namespace \
    #       --set image.repository=${{ secrets.DOCKERHUB_USERNAME }}/cicd-demo \
    #       --set image.tag=${{ github.sha }} \
    #       --wait
